#summary How to Upgrade

= 0.6 to 0.6.5 =

 * Abstract classes and interfaces where prefixed with the file name. Bvb_Grid_Formatter_Interface => Bvb_Grid_Formatter_FormatterInterface

 * Callbacks in forms are now called using call_user_func_array instead call_user_func
 
 * Forms are now built with subForms. So you will see 1- prefixed in all of your input ids. Input names also changed to arrays. This does not affect any previous PHP code. Just if you are using JS libraries to beautify yours forms. 

= 0.5 to 0.6 =

==Factory Pattern==
Now you don't have to instantiate the deploy class.
Use this:
{{{
$grid = Bvb_Grid::factory('table',$options = array(),$gridId = '');
}}}


==Uniformed fields calls==
Whenever you are, you must cell the field name by it's output and not by name. Tables prefixes are also over.

If your raw query looks like this:

{{{
SELECT id, username as name, age, status, online FROM users where id='1';
}}} 

You must reference to the field _username_ as _name_. 
If you are using joins and you have two fields with the same name on different tables you must give one of them an alias
otherwise the first will be overwritten by the last.

==No direct Access==
You cannot set class attributes directly. You now must use the set*() method.

Instead of 

{{{
$grid->cache = array();
}}}
You now have to do
{{{
$grid->setCache(array());
}}}

==CRUD Operations==

CRUD operations now use !Zend_Form to render the form. No more custom forms.
Please refer to this page for more [CRUD information]

==Data Sources==
ZFDatagrid now uses a interface to build the grid, so no more calls like this:
{{{
$grid->setDataFromArray();
$grid->setDataFromXml();
}}}

you must now use
{{{
$grid->setSource(new Bvb_Grid_Source_`*`);
}}}

Check this [Bvb_Grid_Source page] for detailed information

Changes in the query() method.
{{{
$grid->query($select);//Can be used only for Zend_Db_Select and Zend_Db_Table_Abstract Sources
}}}

==Renomeados==

 * !Bvb_Grid_ExtraColumns have been renamed to !Bvb_Grid_Extra_Column
 