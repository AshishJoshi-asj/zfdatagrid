#summary Methods only available for Table render

<wiki:toc max_depth="4" />

=Table=
{{{
$grid->setAjax();
$grid->setImagesUrl();
}}}

==Ajax==
Ajax is easy and simple to setup.
All you have to do is:
{{{
$grid->ajax('id');//A div with this id will be created
}}}

If you want to disable ajax use:
{{{
$grid->ajax(false);
}}}

_Note:_ Ajax is off by default

== Conditional Fields Presentation ==
Let's imagine you are presenting a report. And as any report it will have a range of values. Some positives and, how knows, some negatives.

ZFDatagrid provides two methods for altering CSS classes based on conditions.

===Per Row===

Lets imagine you want to add a CSS class on every row in which population value is less greater than 20000. 

{{{
$grid->setClassRowCondition("{{Population}} > 20000","green");
}}}

The first argument is the condition. As noticed use the {{}} to get fields values.


*NOTE:* When comparing strings please remember to include the '' around the field name, so PHP can treat that as a string and not a number.

You can add a third argument, that is also a class that will be applied if the condition is not true.

{{{
$grid->setClassRowCondition("{{Population}} > 20000","green","orange");
}}}

=== Per Column===

Is the same behavior as for a Row, but you need to specify the column that the condition will be applied.

{{{
$grid->addClassCellCondition('Population',"{{Population}} > 200000","red");
}}}

As expected, you can also add a third argument in case the condition is not true

{{{
$grid->addClassCellCondition('Population',"{{Population}} > 200000","red","green");
}}}

==Default Classes==
You can set the default CSS classes to be applied to even and odd rows

{{{
$grid->setRowAltClasses('odd','even');
}}} 

<font color="red">*ATTENTION*</font> This only applies to Tables.


==Config Options==
For the options this class accepts from a Config File check this  [Zend_Config_Support Page]